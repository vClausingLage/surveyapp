{"version":3,"sources":["components/index.component.js","components/footer.component.js","components/umfrage-erstellen.component.js","components/umfragen-list.component.js","components/umfrage-anzeigen.component.js","components/fire-umfrage.component.js","components/ergebnisse.component.js","App.js","index.js"],"names":["Index","className","style","to","textDecoration","color","fontSize","Footer","UmfrageErstellen","useState","umfrageName","setUmfrageName","inputFrage","setInputFrage","inputOption","setInputOption","optionen","setOptionen","fragen","setFragen","Matrix","setMatrix","THead","map","item","indexOf","marginBottom","onSubmit","e","preventDefault","type","name","onChange","target","value","length","prevState","alert","onClick","n","m","i","Array","fill","addMatrix","obj","ergebnisse","axios","post","then","res","console","log","data","UmfragenList","umfragen","setUmfragen","change","setChange","useEffect","a","get","response","fetchData","umfrage","_id","id","catch","err","tmp","filter","u","deleteUmfrage","icon","faTrash","DatenEingeben","history","useHistory","routeChange","path","push","useParams","FireUmfrage","UName","setUName","optionIndex","setOptionIndex","submitAll","index","frindex","element","setInput","Ergebnisse","setErgebnisse","loading","setLoading","setData","splice","COLORS","RADIAN","Math","PI","count","sum","zaehler","antwort","j","k","z","counter","PieChart","width","height","Pie","cx","cy","labelLine","label","midAngle","innerRadius","outerRadius","radius","x","cos","y","sin","textAnchor","dominantBaseline","dataKey","entry","Cell","App","exact","component","UmfrageAnzeigen","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f27664b9.chunk.js","sourcesContent":["import React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Index = () => {\n    return (\n        <Fragment>\n            <div className=\"centered\">\n                <p>Erstellen Sie mit dieser App Ihre Umfrage und werten Sie sie aus.</p>\n                <button style={{}}><Link to={'/umfrage/erstellen'} style={{textDecoration: 'none', color: 'white', fontSize: '1.5rem'}}>Los geht's!</Link></button>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default Index;","import React, { Fragment } from 'react';\n\nconst Footer = () => {\n  return (\n    <Fragment>\n        <div className=\"panel\">\n        <p>&copy; 2021 clausing-lage</p>\n        </div>\n    </Fragment>\n  );\n}\n\nexport default Footer;","import React, { Fragment, useState } from 'react';\nimport axios from 'axios';\n\nconst UmfrageErstellen = () => {\n    const [umfrageName, setUmfrageName] = useState('');\n    const [inputFrage, setInputFrage] = useState('');\n    const [inputOption, setInputOption] = useState('');\n    const [optionen, setOptionen] = useState([]);\n    const [fragen, setFragen] = useState([]);\n    const [Matrix, setMatrix] = useState([]);\n\n    function submitFrage(e){\n        e.preventDefault();\n        if(inputFrage.length > 0){\n        setFragen(prevState => [...prevState, inputFrage]);\n        setInputFrage('');\n        } else {\n            alert('Text eingeben plz')\n        }\n    }\n    function submitOption(e){\n        if(inputOption.length > 0){\n        e.preventDefault();\n        setOptionen(prevState => [...prevState, inputOption]);\n        setInputOption('');\n        } else {\n            alert('Text eingeben plz')\n        }\n    }\n\n    function addMatrix () {\n        let n = fragen.length;\n        let m = optionen.length;\n        for (let i = 0; i < n; i++) {\n            setMatrix(Matrix[i] = Array(m).fill(0))\n        }\n    }\n\n    function submitUmfrage(e){\n        e.preventDefault();\n        addMatrix();\n        const obj = { name: umfrageName, fragen: fragen, optionen: optionen, ergebnisse: [Matrix]};\n        axios.post('/umfrage/create', obj)\n            .then(res => {console.log(res.data); setFragen([]); setOptionen([])});\n    }\n\n    const THead = () => {\n        return (\n            <tr><th>Frage</th>{optionen.map((item) => <th key={optionen.indexOf(item)}>{item}</th>)}</tr>\n        )\n    }\n    \n    return (\n        <Fragment>\n            <div className=\"\" style={{marginBottom: '6rem'}}>\n            <h1>Umfrage erstellen</h1>\n            <div className=\"grid\">\n            <div className=\"grid-item\">\n                <h2>Eingabe</h2>\n            <div className=\"container\">\n                <form onSubmit={e => e.preventDefault()}>\n                    <label>Geben Sie Ihrer Umfrage einen Titel:  </label>\n                    <input \n                    className=\"input\"\n                    type=\"text\"\n                    name=\"umfrageName\"\n                    onChange={e => setUmfrageName(e.target.value)}\n                    value={umfrageName}>\n                    </input>\n                </form>\n            </div>\n            <div className=\"container\">\n                <p>Skalierung festelegen:</p>\n                <form onSubmit={submitOption}>\n                    <label>Optionen: </label>\n                    <input\n                    className=\"input\"\n                    type=\"text\"\n                    name=\"inputOption\"\n                    onChange={e => setInputOption(e.target.value)}\n                    value={inputOption}>\n                    </input>\n                </form>\n            </div>\n            <div className=\"container\">\n                <p>Fragen erstellen:</p>\n                <form onSubmit={submitFrage}>\n                    <label>Geben Sie Ihre Items ein: </label>\n                    <input\n                    className=\"input\"\n                    type=\"text\"\n                    name=\"inputFrage\"\n                    onChange={e => setInputFrage(e.target.value)}\n                    value={inputFrage}>\n                    </input>\n                </form>\n            </div>\n            </div>\n            <div className=\"grid-item\">\n                <h2>Vorschau</h2>\n                <h1>{umfrageName}</h1>\n                <div className=\"container\">\n                <table>\n                <tbody>\n                {(fragen.length > 0 || optionen.length > 0) && <THead />}\n                {fragen.map((item) => \n                    <tr key={fragen.indexOf(item)}><td>{fragen.indexOf(item) + 1}. {item}</td>{optionen.map(item => <td key={optionen.indexOf(item) + 7500} className=\"ankreuzen\">&#10061;</td>)}</tr>\n                )}\n                </tbody>\n                </table>\n            </div>\n            </div>\n            </div>\n            </div>\n        <button className=\"submitbutton\" onClick={submitUmfrage}>erstellen</button>\n        </Fragment>\n    )\n}\n\nexport default UmfrageErstellen;","import React, { Fragment, useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst UmfragenList = () => {\r\n    const [umfragen, setUmfragen] = useState([]);\r\n    const [change, setChange] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n        const response = await axios.get('/umfrage/list');\r\n        setUmfragen(response.data);\r\n        }\r\n        fetchData();\r\n    },[change]);\r\n\r\n    function deleteUmfrage(id) {\r\n        axios.get('/umfrage/delete/' + id)\r\n            .catch(err => console.log(err));\r\n            const tmp = umfragen.filter( u => u.umfragen !== umfragen );\r\n            setUmfragen(tmp);\r\n            setChange(change + 1);\r\n\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n        <div className=\"center\">\r\n            <h1>Ihre Umfragen</h1>\r\n            <table>\r\n            <tbody>\r\n            {umfragen.map(umfrage => (\r\n                    <tr key={umfragen.indexOf(umfrage)}>\r\n                        <td><Link className=\"navButton\" to={'/umfrage/list/' + umfrage._id}>{umfrage.name}</Link></td>\r\n                        <td><Link className=\"navButton\" to={'/ergebnisse/' + umfrage._id}>Ergebnisse</Link></td>\r\n                        <td><button onClick={e => deleteUmfrage(umfrage._id)} className=\"trash\"><FontAwesomeIcon icon={faTrash} /></button></td>\r\n                    </tr>\r\n            ))}\r\n            </tbody>\r\n            </table>\r\n        </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default UmfragenList;","import React, { Fragment, useState, useEffect } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport axios from 'axios';\n\nconst DatenEingeben = () => {\n    const [fragen, setFragen] = useState([]);\n    const [optionen, setOptionen] = useState([]);\n\n    const history = useHistory();\n    const routeChange = () =>{ \n        let path = '/umfragen/fire/' + id; \n        history.push(path);\n    }\n\n    const { id } = useParams();\n\n    useEffect(() => {\n        const fetchData = async () => {\n        const response = await axios.get('/umfrage/list/' + id);\n        setFragen(response.data.fragen);\n        setOptionen(response.data.optionen);\n        }\n        fetchData();\n    },[]);\n\n    function publish(id){\n        routeChange();\n    }\n\n    return (\n        <Fragment>\n        <div className=\"center\">\n        <h3>überprüfen Sie Ihren Umfragebogen</h3>\n        <h1>{fragen.name}</h1>\n        <p>{fragen._id}</p>\n                <div className=\"container\">\n                <table>\n                <tbody>\n                <tr><th>Fragen</th>{optionen.map((item) => <th key={optionen.indexOf(item)}>{item}</th>)}</tr>\n                {fragen.map(item => <tr key={fragen.indexOf(item)}><td>{item}</td>{optionen.map(item => <td key={optionen.indexOf(item) + 7500} className=\"ankreuzen\">&#10061;</td>)}</tr>)}\n                </tbody>\n                </table>\n            </div>\n        </div>\n        <button onClick={e => publish(id)} className=\"submitbutton\">Umfrage veröffentlichen</button>\n        \n        </Fragment>\n    )\n}\n\nexport default DatenEingeben;","import React, { Fragment, useState, useEffect, useHistory } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\n \r\nconst FireUmfrage = (  ) => {\r\n    const [fragen, setFragen] = useState([]);\r\n    const [optionen, setOptionen] = useState([]);\r\n    const [UName, setUName] = useState('');\r\n    const [optionIndex, setOptionIndex] = useState([]);\r\n\r\n    let { id } = useParams();\r\n\r\n    //console.log(optionIndex)\r\n\r\n    const history = useHistory();\r\n    const routeChange = () =>{ \r\n        let path = '/umfragen/list/'; \r\n        history.push(path);\r\n    }\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n        const response = await axios.get('/umfrage/list/' + id);\r\n        setFragen(response.data.fragen);\r\n        setOptionen(response.data.optionen);\r\n        setUName(response.data.name)\r\n        setOptionIndex(response.data.ergebnisse[0])\r\n        }\r\n        fetchData();\r\n    },[]);\r\n\r\n    function submitAll(e){\r\n        e.preventDefault();\r\n        const obj = optionIndex;\r\n        axios.post('/umfrage/fire/' + id, obj)\r\n            .then(routeChange())\r\n    }\r\n\r\n    const setInput = (frindex, index) => {\r\n        let n = optionen.length;\r\n        for (let i = 0; i < n; i++) {\r\n            optionIndex[frindex][i] = 0;\r\n        }\r\n        optionIndex[frindex][index] = (optionIndex[frindex][index] === 0 ? 1 : 0);\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n        <div className=\"center\">\r\n        <h3>bitte füllen Sie den Fragebogen aus und senden Sie ihn danach ab</h3>\r\n        <h1>{UName}</h1>\r\n                <div className=\"container\">\r\n                <table>\r\n                <tbody>\r\n                <tr><th>Fragen</th>{optionen.map((item, index) => <th key={index}>{item}</th>)}</tr>\r\n                \r\n                {fragen.map((item, frindex) => <tr key={frindex}><td>{item}</td>\r\n                    {optionen.map((element, index) => <td key={index} className=\"ankreuzen\">\r\n                        <input \r\n                        type=\"radio\"\r\n                        name={frindex}\r\n                        id={element}\r\n                        onChange={e => setInput(frindex, index)}\r\n                        />\r\n                    </td>)}\r\n                </tr>)}\r\n\r\n                </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n        <button onClick={e => submitAll(e)} className=\"submitbutton\">absenden</button>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default FireUmfrage;","import React, { Fragment, useState, useEffect } from 'react'\nimport { useParams } from 'react-router-dom'\nimport axios from 'axios'\nimport { PieChart, Pie, Cell, Tooltip } from 'recharts'\n\nconst Ergebnisse = () => {\n    const [ergebnisse, setErgebnisse] = useState([])\n    const [UName, setUName] = useState('')\n    const [optionen, setOptionen] = useState([])\n    const [fragen, setFragen] = useState([])\n    const [loading, setLoading] = useState(true)\n    const [data, setData] = useState([])\n    const { id } = useParams()\n  \n    //console.log(optionen)\n\n    useEffect(() => {\n        const fetchData = async () => {\n            const response = await axios.get('/umfrage/list/' + id)\n            setErgebnisse(response.data.ergebnisse)\n            setUName(response.data.name)\n            setOptionen(response.data.optionen)\n            setFragen(response.data.fragen)\n            setLoading(false)\n            ergebnisse.splice(0)\n        }\n        fetchData();\n    }, [])\n\n    function counter(index){\n      let count = []\n      let sum = []\n      let zaehler = 0\n      let antwort = []\n      let n = optionen.length\n      let m = ergebnisse.length\n      //console.log('Optionen', n, 'Ergebnisse',m)\n      //console.log('Index',index)\n      for (let i = 0; i < m; i++) {\n          count = [...count, ergebnisse[i][index]]\n      }\n      //console.log('count',count)\n      for (let j = 0; j < n; j++) {\n        for (let k = 0; k < m; k++) {\n          zaehler += count[k][j]\n        }\n        sum = [...sum, zaehler]\n        zaehler = 0\n      }\n      //console.log(sum)\n      for (let z = 0; z < n; z++) {\n        antwort[z] = {name: `${fragen[z]}`, value: sum[z]}\n      }\n      setData(antwort)\n    }\n\n    const COLORS = ['#003f5c', '#2f4b7c', '#665191', '#a05195', '#d45087', '#f95d6a', '#ff7c43', '#ffa600']\n\n    const RADIAN = Math.PI / 180;\n    const renderCustomizedLabel = ({ cx, cy, midAngle, innerRadius, outerRadius, index }) => {\n    const radius = 25 + innerRadius + (outerRadius - innerRadius)\n    const x = cx + radius * Math.cos(-midAngle * RADIAN)\n    const y = cy + radius * Math.sin(-midAngle * RADIAN)\n\n    return (\n      <text\n      x={x}\n      y={y}\n      fill=\"#34088e\"\n      textAnchor={x > cx ? \"start\" : \"end\"}\n      dominantBaseline=\"central\"\n    >\n      {optionen[index]} ({data[index].value})\n    </text>\n    );\n    };\n\n    return (\n        <Fragment>\n        {loading && <p className=\"centered\">loading</p>}\n        <div className=\"center\">\n        <div className=\"grid\">\n        <div className=\"grid-item\">\n        {!loading && <div>\n        <h1>{UName}</h1>\n        {fragen.map((item, index) =>\n          <p key={item}><button onClick={e => counter(index)}>{`${fragen[index]}`}</button></p>\n        )}\n        </div>}\n        </div>\n        <div className=\"grid-item\">\n        <PieChart width={400} height={400}>\n        <Pie\n          data={data}\n          cx=\"50%\"\n          cy=\"50%\"\n          labelLine={false}\n          label={renderCustomizedLabel}\n          outerRadius={100}\n          fill=\"#8884d8\"\n          dataKey=\"value\"\n        >\n          {data.map((entry, index) => (\n            <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n          ))}\n        </Pie>\n        </PieChart>\n        </div>\n        </div>\n        </div>\n        </Fragment>\n)}\n\nexport default Ergebnisse;","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\n\nimport Index from './components/index.component';\nimport Footer from './components/footer.component';\nimport UmfrageErstellen from './components/umfrage-erstellen.component';\nimport UmfragenList from './components/umfragen-list.component';\nimport UmfrageAnzeigen from './components/umfrage-anzeigen.component';\nimport FireUmfrage from './components/fire-umfrage.component';\nimport Ergebnisse from './components/ergebnisse.component';\n\nconst App = () => {\n    return (\n      <Router>\n      <div className=\"container\">\n        <nav>\n          <Link to={'/'} className=\"navButton\">Home</Link>\n          <Link to={'/umfrage/erstellen'} className=\"navButton\" >neue Umfrage erstellen</Link>\n          <Link to={'/umfragen/list'} className=\"navButton\">Ihre Umfragen</Link>\n        </nav>\n      <Switch>\n          <Route exact path='/' component={ Index } />\n          <Route exact path='/umfrage/erstellen' component={ UmfrageErstellen } />\n          <Route exact path='/umfrage/list/:id' component={ UmfrageAnzeigen } />\n          <Route exact path='/umfragen/list' component={ UmfragenList } />\n          <Route path='/umfragen/fire/:id' component={ FireUmfrage } />\n          <Route exact path='/ergebnisse/:id' component={ Ergebnisse } />\n      </Switch>\n      </div>\n    <Footer />\n    </Router>\n    );\n  }\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './css/component.css';\n\nimport App from './App';\n\nReactDOM.render(\n  <BrowserRouter>\n  <App />\n  </BrowserRouter>, document.getElementById('root'));"],"sourceRoot":""}